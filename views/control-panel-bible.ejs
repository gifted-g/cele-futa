<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="js/jquery-3.6.0.min.js"></script>

    <link href="css/select2.min.css" rel="stylesheet" />

    <script src="js/select2.min.js"></script>

    <title>Control Panel</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        text-align: center;
        margin: 20px;
      }

      h1 {
        color: #333;
      }

      .hymn-buttons {
        display: flex;
        flex-direction: column; /* Buttons on new lines */
        gap: 10px; /* Spacing between buttons */
        margin-top: 20px;
        width: 80%;
      }

      .hymn-buttons button {
        padding: 10px 20px;
        background-color: #fff; /* White background */
        color: #007acc; /* Blue text color */
        border: 1px solid #007acc; /* Blue border */
        cursor: pointer;
        text-align: left; /* Align the buttons to the left */
      }

      .highlight {
        background-color: #007acc !important;
        color: #fff !important;
      }

      /* Style for the dropdown container */
      .bible {
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f8f8f8;
        width: 200px;
        font-size: 16px;
        color: #333;
        padding-bottom: 10px;
      }

      /* Style for dropdown options */
      #bible option {
        font-size: 16px;
        color: #333;
      }
    </style>
  </head>
  <body>
    <div>Screen IP: <%= ipAddress %></div>

    <h1>
      Control Panel
      <span>
        |||||
        <a href="/control-panel">Hymns</a>
      </span>
      <span>
        |||||
        <a href="/add">Add Song</a>
      </span>
    </h1>
    <div style="padding-bottom: 10px">
      <label for="bible">Select a Bible</label>
      <select id="bible" class="bible">
        <option value=""></option>
      </select>
    </div>

    <div style="padding-bottom: 10px">
      <label for="bible">Select a Bible Chapter:</label>
      <select id="bibleChapter" class="bible">
        <option value=""></option>
      </select>
    </div>

    <div style="padding-bottom: 10px">
      <label for="bible">Select a Bible Version:</label>
      <select class="bible" id="bibleVersion">
        <option value=""></option>
      </select>
    </div>

    <div class="hymn-buttons">
      <!-- Hymn buttons will be displayed here -->
    </div>
    <script src="js/socket.io.js"></script>
    <script>
      $(document).ready(function () {
        $("#bible").select2();

        const socket = io();

        const populateBibleDropdown = async () => {
          const bibleRes = await fetch("/bible-books");
          const bible = await bibleRes.json();

          const bibleTag = document.getElementById("bible");

          bible.forEach(function (title) {
            const option = document.createElement("option");
            option.value = title;
            option.text = title;
            bibleTag.appendChild(option);
          });
        };

        // Call the function to populate the dropdown
        populateBibleDropdown();

        const runner = () => {
          const selectElement = document.getElementById("bibleVersion");

          const bibleTag = document.getElementById("bible");
          const bibleChapterTag = document.getElementById("bibleChapter");

          // Get the selected option
          const bible = bibleTag.options[bibleTag.selectedIndex].text;
          const bibleChapter =
            bibleChapterTag.options[bibleChapterTag.selectedIndex].text;
          const bibleVersion =
            selectElement.options[selectElement.selectedIndex].text;

          let url = "/get-content";
          if (!!bibleVersion) {
            url += `?version=${bibleVersion}`;
          }

          fetch(url, {
            method: "POST",
            body: JSON.stringify({
              book: bible,
              chapter: bibleChapter,
            }),
            headers: {
              "Content-Type": "application/json",
            },
          })
            .then((res) => res.json())
            .then((res) => {
              const {
                reading: { data },
              } = res;

              const hymnButtonsDiv = document.querySelector(".hymn-buttons");

              hymnButtonsDiv.innerHTML = "";

              data.forEach((line, index) => {
                const button = document.createElement("button");
                button.innerHTML = `<b>${bible} ${bibleChapter}:${
                  index + 1
                } ${bibleVersion.toUpperCase()}</b><br/> ${line.Scripture}`;

                if (line?.Scripture?.match(/^[\s]*$/)) {
                  return;
                }

                button.addEventListener("click", function () {
                  // Send the content using socket.io when the button is clicked
                  const contentToSend = {
                    title: `${bible} ${bibleChapter}:${index + 1}`,
                    line: line.Scripture,
                    version: bibleVersion,
                  };

                  const highlightedButtons =
                    document.querySelectorAll(".highlight");

                  for (let i = 0; i < highlightedButtons.length; i++) {
                    highlightedButtons[i].classList.remove("highlight");
                  }

                  button.classList.add("highlight");

                  socket.emit("bible-content", contentToSend);
                });

                hymnButtonsDiv.appendChild(button);
              });
            });
        };

        const handleSelectBible = () => {
          const bibleSelectElement = document.getElementById("bible");

          const wo = () => {
            // Get the selected option
            const selectedOption =
              bibleSelectElement.options[bibleSelectElement.selectedIndex].text;

            fetch("/get-chapters", {
              method: "POST",
              body: JSON.stringify({
                book: selectedOption,
              }),
              headers: {
                "Content-Type": "application/json",
              },
            })
              .then((res) => res.json())
              .then((res) => {
                const { totalChapters, versions } = res;

                const bibleTag = document.getElementById("bibleChapter");
                const bibleVersion = document.getElementById("bibleVersion");

                bibleTag.innerHTML = "";
                bibleVersion.innerHTML = "";

                for (let i = 0; i < totalChapters; i++) {
                  const option = document.createElement("option");
                  option.value = i + 1;
                  option.text = i + 1;
                  bibleTag.appendChild(option);
                }

                for (let i = 0; i < versions.length; i++) {
                  const option = document.createElement("option");
                  option.value = versions[i];
                  option.text = versions[i];
                  bibleVersion.appendChild(option);
                }

                runner();
              });
          };

          // Add an event listener to listen for changes
          bibleSelectElement.addEventListener("change", wo);
          $("#bible").on("change", wo);
        };

        handleSelectBible();

        const handleChapterSelect = () => {
          const selectElement = document.getElementById("bibleVersion");

          const bibleTag = document.getElementById("bible");
          const bibleChapterTag = document.getElementById("bibleChapter");

          // Add an event listener to listen for changes
          selectElement.addEventListener("change", runner);
          bibleChapterTag.addEventListener("change", runner);
        };

        handleChapterSelect();
      });
    </script>
  </body>
</html>
